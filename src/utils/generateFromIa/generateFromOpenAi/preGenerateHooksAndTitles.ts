import openai from "./openai";
import OpenAI from "openai";

//######################################## HOOOKS AND TITLE ##############################################

function createHooks(themes: string): OpenAI.ChatCompletionCreateParamsNonStreaming {
  return {
    model: "gpt-4o-mini",
    temperature: 0.60,
    max_tokens: 8192,
    response_format: { type: "json_object" },
    messages: [
      {
        role: "system",
        content: `
          Tu es un expert en cr√©ation de hooks captivants pour des quiz. 
          Ta mission est de concevoir des accroches dynamiques et motivantes pour chaque th√®me. 
          Chaque hook servira √† g√©n√©rer une s√©rie de 7 questions de quiz √† choix multiples (QCM), chacune avec 4 options de r√©ponse dont une seule est correcte.

           ***LE PUBLIC EST UN PUBLIC FRANCAIS**** : Vocabulaire et notion adapt√© au PUBLIC FRANCAIS


          **Objectif** :
          - Cr√©er **1 hook** percutants pour chaque th√®me fourni.
          - Les hooks doivent etre adapt√© pour le public fran√ßais.
          - Chaque hook doit captiver l'utilisateur, le challenger et l'inciter √† participer activement au quiz.
          - Les hooks doivent inspirer des questions de quiz amusantes, stimulantes et engageantes.

          **Instructions pour les Hooks** :
          - Fournir une liste de **hooks** avec 1 hook par th√®me, chaque hook ne d√©passant pas **15 mots**.
          - Les hooks ne doivent pas √™tre present√© de mani√®re interpersonnelles.
          - Utiliser un **jargon jeune** et moderne (par exemple : flex, fragile, blazer, squeezer, kiffer, banger, hess, etc.).
          - Chaque hook doit √™tre sp√©cifique au th√®me et inspirer des questions de quiz.
          - Employez un ton taquin et motivant, en ajoutant des emojis pour plus d'impact.
          - Les Hooks doivent rester impersonnelles, sans impliquer les √©motions ou le v√©cu du joueur.
          - Ne r√©utilise pas des Hooks d√©j√† g√©n√©r√©es pour d'autres utilisateurs.

          **Exemples de Hooks Non Valides** :
          - 'Influenceurs au top! üí´ Raconte-nous tes histoires pr√©f√©r√©es et prouve que tu connais les buzzers du moment!' (erreur : demande au joueur de raconter)
          - 'Revival time! üé§ Rappelle-toi des sons des ann√©es 70 √† 90, qui g√®re ici? Teste tes souvenirs avec notre quiz nostalgique!' (long et pas clair)
          - 'Pop culture cor√©enne √† gogo! üá∞üá∑ Qui sait vraiment ce qui fait vibrer la K-culture? Teste tes connaissances et surprends-nous!' (trop g√©n√©ral)

          **Exemples de Hooks Valides** :
          - 'H√©ros badass et guerri√®res! ü§†üí• Es-tu un vrai fan des westerns? Viens prouver tes connaissances avec notre quiz !'
          - 'Science-fiction en mode renouveau! üöÄ T'es partant pour un voyage dans l'espace des s√©ries ? Montre-nous ce que tu sais avec ce quiz !'
          - 'Revival time! üé§ Sons des ann√©es 70 √† 90, qui g√®re ici ? Teste tes souvenirs avec notre quiz nostalgique !'
          - 'Es-tu pr√™t √† prouver tes connaissances ? ü§îüß† Teste-toi avec notre quiz !'
          - 'Pop culture cor√©enne √† gogo! üá∞üá∑ Tu KIFF la K-culture ? Teste tes connaissances et surprends-nous !'

          ***IMPORTANT*** : Chaque hook doit servir d'introduction √† une s√©rie de QCM. Assure-toi qu'ils sont captivants et adapt√©s pour g√©n√©rer des questions engageantes.

          **Format de R√©ponse** :
          - Retourne un JSON avec les hooks g√©n√©r√©s pour chaque th√®me.
          - Format attendu : 
          {
            "hooks": [
              "hook 1",
              "hook 2",
              "hook 3",
              "hook 4",
              "hook 5"
            ]
          }

          **Exigences Importantes** :
          - Les hooks doivent introduire clairement le th√®me et motiver les utilisateurs √† participer.
          - Inclure des d√©fis et des provocations pour susciter l'int√©r√™t.
          - Pr√©parer le terrain pour des questions intrigantes et engageantes.

          **Exemple** :
          - Pour le th√®me "Mythologie grecque", un bon hook pourrait √™tre : "Prouve que tu connais les dieux grecs ! üèõÔ∏è‚ö° Pr√™t √† relever le d√©fi ?"
          - Les questions suivantes seront bas√©es sur ce hook, testant les connaissances sur la mythologie.

          Fournis des hooks originaux et sp√©cifiques qui pourront facilement √™tre transform√©s en s√©ries de questions de quiz.
        `
      },
      {
        role: "user",
        content: `Cr√©e des hooks en fran√ßais pour les th√®mes suivants : ${themes}
        ***ATTENTION*** : 
          - Les Hooks doivent rester impersonnelles, sans impliquer les √©motions ou le v√©cu du joueur.
          - Ne r√©utilise pas des Hooks d√©j√† g√©n√©r√©es pour d'autres utilisateurs.
        `
      }
    ]
  };
}


function selectHook(hooks: string[]): OpenAI.ChatCompletionCreateParamsNonStreaming {
  return {
    model: "gpt-4o-mini",
    temperature: 0.65,
    max_tokens: 8192,
    response_format: { type: "json_object" },
    messages: [
      {
        role: "system",
        content: `
          Tu es un expert en phrases d'accroche (hooks) qui attirent l'attention et cr√©ent l'envie de jouer √† des quiz. 
          Ton objectif est de transformer chaque hook en une entr√©e percutante pour un quiz √† choix multiple (QCM), avec des titres accrocheurs.

          ***LE PUBLIC EST UN PUBLIC FRANCAIS**** : Vocabulaire et notion adapt√© au PUBLIC FRANCAIS

          **Ta mission** :
            - Corriger les hooks non pertinents ou pas adapt√©s pour qu'ils servent d'introduction √† un quiz QCM.
            - Attribuer un titre cool et accrocheur √† chaque hook.

          **Instructions** :
          1. **Modification des Hooks** : 
            - Ajuste les hooks pour qu'ils soient clairs, engageants, et orient√©s vers un contexte de quiz.
            - Assure-toi que chaque hook invite √† relever un d√©fi ou √† tester ses connaissances, avec un ton taquin, amical et motivant.
            - Utilise du **jargon jeune** pour rendre le tout fun et dynamique.
            - Priorise les informations pertinentes pour un public en France, en √©vitant les questions personnelles ou trop introspectives.
          
          2. **Cr√©ation des Titres** :
            - Cr√©e des titres courts (3 mots max) qui captent l'essence du hook et du quiz.
            - Garde un ton l√©ger, amusant et accessible, en √©vitant les termes trop techniques ou complexes.

          **Format attendu** :
          - Retourne un tableau JSON avec chaque hook et son titre associ√©.
          - Format attendu : ***JSON ARRAY FORMAT***
          {
            "hooks": [
              { "hook": "texte du hook s√©lectionn√©", "title": "le titre du quiz" }
            ]
          }

          **Exemples de Hooks Corrig√©s et Titres Associ√©s** :
          - Hook : 'Es-tu pr√™t √† prouver tes connaissances? ü§îüß† Teste-toi avec notre quiz !'
            - Titre : 'Culture G Fun!'
          - Hook : 'Pop culture cor√©enne √† gogo! üá∞üá∑ Tu KIFF la K-culture? Teste tes connaissances et surprends-nous !'
            - Titre : 'K-Culture Mania!'
          - Hook : 'Revival time! üé§ Sons des ann√©es 70 √† 90, qui g√®re ici? Teste tes souvenirs avec notre quiz nostalgique !'
            - Titre : 'Vintage Vibes'

          **Conseils** :
          - Les hooks doivent √™tre fun et accessibles, tout en incitant les utilisateurs √† se d√©fier sur le th√®me du quiz.
          - Les titres doivent refl√©ter l'esprit du quiz et donner envie de jouer. N'oublie pas d'utiliser un jargon jeune pour maximiser l'impact !

          ***IMPORTANT*** :
          - Assure-toi que les hooks sont adapt√©s √† un contexte francophone, avec des r√©f√©rences culturelles en accord avec la France.
        `
      },
      {
        role: "user",
        content: `Voici une liste de hooks : ${hooks}

        **MODIFICATION DES HOOKS** :
        - Assurez-vous que chaque hook est clairement orient√© pour un contexte de quiz.
        - Si les hooks ne correspondent pas aux r√®gles, ajustez-les pour qu'ils deviennent des accroches efficaces pour une s√©rie de questions QCM.
        - Cr√©e des titres percutants et en ad√©quation avec le hook.
        `
      }
    ]
  };
}

async function selectBestHookFromOpenAi(hooks: string[]): Promise<{hook : string, title : string}[]> {
  let parsedResponse : {hooks : {hook : string, title : string}[]};
  let attempts = 0;
  const maxAttempts = 1;

  while (attempts < maxAttempts) {
      const response = await openai.chat.completions.create(selectHook(hooks));
      const jsonResponse = response.choices[0].message?.content || '';
      const cleanedResponse = jsonResponse.trim();

      try {
          parsedResponse = JSON.parse(cleanedResponse);
          if (parsedResponse &&  Array.isArray(parsedResponse.hooks)) {
              return parsedResponse.hooks
          }
      } catch (error) {
          console.error("Erreur lors de l'analyse de la r√©ponse JSON:", error);
          throw (error)
      }
      attempts++;
  }
  throw new Error("√âchec de la g√©n√©ration du hook plusieurs tentatives.");
}

export async function createHooksAndTitlesFromOpenAi(themes: string): Promise<{hook : string, title : string}[]> {
  let parsedResponse : {hooks : string[]};
  let attempts = 0;
  const maxAttempts = 1;

  while (attempts < maxAttempts) {
      const response = await openai.chat.completions.create(createHooks(themes));
      const jsonResponse = response.choices[0].message?.content || '';
      const cleanedResponse = jsonResponse.trim();

      try {
          parsedResponse = JSON.parse(cleanedResponse);
          if (parsedResponse && Array.isArray(parsedResponse.hooks)) {
              const bestHookQuiz = await selectBestHookFromOpenAi(parsedResponse.hooks)
              // console.log(parsedResponse);
              // console.log(bestHookQuiz);
              return (bestHookQuiz)
          }
      } catch (error) {
          console.error("Erreur lors de l'analyse de la r√©ponse JSON:", error);
          throw (error)
      }
      attempts++;
  }
  throw new Error("√âchec de la g√©n√©ration du hook plusieurs tentatives.");
}

